function [ normals, coeff ] = PointsToHalfSpaces( P )
%UNTITLED Summary of this function goes here
%   Detailed explanation goes here

    % convhulln returns a p by n matrix where n is the dim of the space
    % and p is the number of triangular facets of the convex hull of the
    % points in P.
    K = convhulln(P);
    normals = zeros(size(K));
    coeff = zeros(size(K,1),1);
    for j=1:size(P,1)
        % this gives us the veritces of the j-th facet
        facet = P(K(j,:),:); 
        sizeOfFacetMatrix = size(facet);
        
        % we calculate linear subspaces determined by the vectors of the
        % facet. This is done by taking the difference between the first
        % vector and every other vector
        D = -eye(sizeOfFacetMatrix(1));
        D(:,1) = ones(1,sizeOfFacetMatrix(1));
        parallelVectors = D*facet;
        normals(j,:) = (null(parallelVectors(2:end,:)))';
        
        % the dot product of the first vertex of the facet with the normal
        % to the face
        coeff(j) = dot(normals(j,:), facet(1,:));
    end
end

